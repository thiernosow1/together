{"ast":null,"code":"/**\n * js/dev/classes/menu.js\n * gestion des rollover avec tiltJS\n * \n * */\n//création d'une classe ES6\nimport jump from \"jump.js\";\n\nclass Menu {\n  constructor() {\n    console.log(\"Hello Menu\");\n    this.init();\n  }\n\n  init() {\n    this.menuOnScroll();\n    this.menuOnClick();\n    this.initObserver();\n  }\n\n  initObserver() {\n    const observer = new window.IntersectionObserver(function (entries) {\n      entries.forEach(function (entry) {\n        //pour chaqu entry\n        const ratio = entry.intersectionRatio;\n        const element = entry.target;\n\n        if (ratio > 0.5) {\n          console.log(element, \"visible\");\n        } else {\n          console.log(element, \"non visible\");\n        }\n      });\n    }, {\n      threshold: 0.5\n    } // intervalle pour affiner\n    ); //utilisation de l'observer avec les .elts .scroll-part\n\n    document.querySelectorAll('.scroll-part').forEach(function (element) {\n      //observer va \"observer l'element\"\n      observer.observe(element);\n    });\n  }\n\n  menuOnScroll() {\n    //1. gestion du scroll\n    window.addEventListener(\"scroll\", function (e) {\n      //console.log(\"scroll ==>\", e);\n      // si mon scroll est sup. a 100px, reduction du menu\n      const scrollvalue = window.pageYOffset; //console.log(\"scrollvalue\", scrollvalue);\n\n      if (scrollvalue > 20) {\n        // au scroll le menu se rappetisse\n        document.body.classList.add(\"is-small-menu\");\n        console.log(\"sup a 20\");\n      } else {\n        document.body.classList.remove(\"is-small-menu\");\n      }\n    });\n  }\n\n  menuOnClick() {\n    this.links = document.querySelectorAll('a[href^=\"#\"]');\n    this.links.forEach(function (link) {\n      link.addEventListener(\"click\", function (e) {\n        e.preventDefault();\n        jump(e.target.getAttribute(\"href\"), {\n          offset: 0\n        });\n      });\n    });\n  }\n\n} //export vers l'exterieur d'une instance de cette Classe\n\n\nexport const menu = new Menu();","map":{"version":3,"sources":["/home/baht/together/client/src/assets/js/dev/classes/menu.js"],"names":["jump","Menu","constructor","console","log","init","menuOnScroll","menuOnClick","initObserver","observer","window","IntersectionObserver","entries","forEach","entry","ratio","intersectionRatio","element","target","threshold","document","querySelectorAll","observe","addEventListener","e","scrollvalue","pageYOffset","body","classList","add","remove","links","link","preventDefault","getAttribute","offset","menu"],"mappings":"AAAA;;;;;AAMA;AACA,OAAOA,IAAP,MAAiB,SAAjB;;AAEA,MAAMC,IAAN,CAAW;AACTC,EAAAA,WAAW,GAAE;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,SAAKC,IAAL;AACC;;AAEDA,EAAAA,IAAI,GAAE;AACJ,SAAKC,YAAL;AACA,SAAKC,WAAL;AACA,SAAKC,YAAL;AACD;;AAEDA,EAAAA,YAAY,GAAE;AACZ,UAAMC,QAAQ,GAAG,IAAIC,MAAM,CAACC,oBAAX,CACf,UAASC,OAAT,EAAiB;AACfA,MAAAA,OAAO,CAACC,OAAR,CAAgB,UAASC,KAAT,EAAe;AAC7B;AACA,cAAMC,KAAK,GAAGD,KAAK,CAACE,iBAApB;AACA,cAAMC,OAAO,GAAGH,KAAK,CAACI,MAAtB;;AACA,YAAKH,KAAK,GAAG,GAAb,EAAiB;AACfZ,UAAAA,OAAO,CAACC,GAAR,CAAYa,OAAZ,EAAqB,SAArB;AACD,SAFD,MAEO;AACLd,UAAAA,OAAO,CAACC,GAAR,CAAYa,OAAZ,EAAqB,aAArB;AACD;AACF,OATD;AAUD,KAZc,EAaf;AAACE,MAAAA,SAAS,EAAE;AAAZ,KAbe,CAaG;AAbH,KAAjB,CADY,CAgBZ;;AACAC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,cAA1B,EAA0CR,OAA1C,CAAkD,UAASI,OAAT,EAAiB;AACjE;AACAR,MAAAA,QAAQ,CAACa,OAAT,CAAiBL,OAAjB;AACD,KAHD;AAID;;AAEDX,EAAAA,YAAY,GAAE;AACZ;AACAI,IAAAA,MAAM,CAACa,gBAAP,CAAwB,QAAxB,EAAkC,UAASC,CAAT,EAAW;AAC3C;AACA;AACA,YAAMC,WAAW,GAAGf,MAAM,CAACgB,WAA3B,CAH2C,CAI3C;;AACA,UAAID,WAAW,GAAG,EAAlB,EAAqB;AACnB;AACAL,QAAAA,QAAQ,CAACO,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,eAA5B;AACA1B,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD,OAJD,MAIO;AACLgB,QAAAA,QAAQ,CAACO,IAAT,CAAcC,SAAd,CAAwBE,MAAxB,CAA+B,eAA/B;AACD;AACF,KAZD;AAaD;;AAEDvB,EAAAA,WAAW,GAAE;AACX,SAAKwB,KAAL,GAAaX,QAAQ,CAACC,gBAAT,CAA0B,cAA1B,CAAb;AACA,SAAKU,KAAL,CAAWlB,OAAX,CAAmB,UAASmB,IAAT,EAAc;AAC/BA,MAAAA,IAAI,CAACT,gBAAL,CAAsB,OAAtB,EAA+B,UAASC,CAAT,EAAW;AACxCA,QAAAA,CAAC,CAACS,cAAF;AACAjC,QAAAA,IAAI,CAACwB,CAAC,CAACN,MAAF,CAASgB,YAAT,CAAsB,MAAtB,CAAD,EAAgC;AAClCC,UAAAA,MAAM,EAAG;AADyB,SAAhC,CAAJ;AAGD,OALD;AAMD,KAPD;AAQD;;AA9DM,C,CAiEX;;;AACA,OAAO,MAAMC,IAAI,GAAG,IAAInC,IAAJ,EAAb","sourcesContent":["/**\n * js/dev/classes/menu.js\n * gestion des rollover avec tiltJS\n * \n * */\n\n//création d'une classe ES6\nimport jump from \"jump.js\";\n\nclass Menu {\n  constructor(){\n    console.log(\"Hello Menu\");\n    this.init();\n    }\n\n    init(){\n      this.menuOnScroll();\n      this.menuOnClick();\n      this.initObserver();\n    }\n\n    initObserver(){\n      const observer = new window.IntersectionObserver(\n        function(entries){\n          entries.forEach(function(entry){\n            //pour chaqu entry\n            const ratio = entry.intersectionRatio;\n            const element = entry.target;\n            if ( ratio > 0.5){\n              console.log(element, \"visible\");\n            } else {\n              console.log(element, \"non visible\");\n            }\n          });\n        }, \n        {threshold: 0.5 } // intervalle pour affiner\n      );\n      //utilisation de l'observer avec les .elts .scroll-part\n      document.querySelectorAll('.scroll-part').forEach(function(element){\n        //observer va \"observer l'element\"\n        observer.observe(element);\n      });\n    }\n    \n    menuOnScroll(){\n      //1. gestion du scroll\n      window.addEventListener(\"scroll\", function(e){\n        //console.log(\"scroll ==>\", e);\n        // si mon scroll est sup. a 100px, reduction du menu\n        const scrollvalue = window.pageYOffset;\n        //console.log(\"scrollvalue\", scrollvalue);\n        if (scrollvalue > 20){\n          // au scroll le menu se rappetisse\n          document.body.classList.add(\"is-small-menu\");\n          console.log(\"sup a 20\");\n        } else { \n          document.body.classList.remove(\"is-small-menu\");\n        }\n      });\n    }\n\n    menuOnClick(){\n      this.links = document.querySelectorAll('a[href^=\"#\"]');\n      this.links.forEach(function(link){\n        link.addEventListener(\"click\", function(e){\n          e.preventDefault();\n          jump(e.target.getAttribute(\"href\"), {\n            offset : 0\n          });\n        })\n      })\n    }\n}\n\n//export vers l'exterieur d'une instance de cette Classe\nexport const menu = new Menu();"]},"metadata":{},"sourceType":"module"}