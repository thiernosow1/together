"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class Registry {
  constructor(ttl) {
    _defineProperty(this, "expires", null);

    _defineProperty(this, "cache", new Map());

    _defineProperty(this, "links", new Map());

    if (typeof ttl !== 'number') {
      throw new Error('ttl is required');
    }

    this.ttl = ttl;
  }

  hasLink(key) {
    return this.links.has(key);
  }

  ln(alias, key) {
    this.links.set(alias, key);
  }

  lookup(key) {
    const {
      links
    } = this;
    return links.has(key) ? links.get(key) : key;
  }

  has(key) {
    return this.cache.has(this.lookup(key));
  }

  get(key) {
    return this.cache.get(this.lookup(key));
  }

  set(key, module) {
    const {
      cache
    } = this;
    const pid = this.lookup(key);

    if (!cache.has(pid)) {
      cache.set(pid, module);
    }
  }

  forEach(fn) {
    return this.cache.forEach(fn);
  }

  sweep() {
    if (!this.expires) {
      this.expires = Date.now() + this.ttl;
    }

    if (this.expires <= Date.now()) {
      this.clear();
    }
  }

  clear() {
    this.cache.clear();
    this.links.clear();
    this.expires = null;
  }

}

exports.default = Registry;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jbGllbnQvcmVnaXN0cnkuanMiXSwibmFtZXMiOlsiUmVnaXN0cnkiLCJjb25zdHJ1Y3RvciIsInR0bCIsIk1hcCIsIkVycm9yIiwiaGFzTGluayIsImtleSIsImxpbmtzIiwiaGFzIiwibG4iLCJhbGlhcyIsInNldCIsImxvb2t1cCIsImdldCIsImNhY2hlIiwibW9kdWxlIiwicGlkIiwiZm9yRWFjaCIsImZuIiwic3dlZXAiLCJleHBpcmVzIiwiRGF0ZSIsIm5vdyIsImNsZWFyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBZSxNQUFNQSxRQUFOLENBQWU7QUFDN0JDLEVBQUFBLFdBQVcsQ0FBQ0MsR0FBRCxFQUFNO0FBQUEscUNBT1AsSUFQTzs7QUFBQSxtQ0FTVCxJQUFJQyxHQUFKLEVBVFM7O0FBQUEsbUNBV1QsSUFBSUEsR0FBSixFQVhTOztBQUNoQixRQUFJLE9BQU9ELEdBQVAsS0FBZSxRQUFuQixFQUE2QjtBQUM1QixZQUFNLElBQUlFLEtBQUosQ0FBVSxpQkFBVixDQUFOO0FBQ0E7O0FBQ0QsU0FBS0YsR0FBTCxHQUFXQSxHQUFYO0FBQ0E7O0FBUURHLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBRCxFQUFNO0FBQ1osV0FBTyxLQUFLQyxLQUFMLENBQVdDLEdBQVgsQ0FBZUYsR0FBZixDQUFQO0FBQ0E7O0FBRURHLEVBQUFBLEVBQUUsQ0FBQ0MsS0FBRCxFQUFRSixHQUFSLEVBQWE7QUFDZCxTQUFLQyxLQUFMLENBQVdJLEdBQVgsQ0FBZUQsS0FBZixFQUFzQkosR0FBdEI7QUFDQTs7QUFFRE0sRUFBQUEsTUFBTSxDQUFDTixHQUFELEVBQU07QUFDWCxVQUFNO0FBQUVDLE1BQUFBO0FBQUYsUUFBWSxJQUFsQjtBQUNBLFdBQU9BLEtBQUssQ0FBQ0MsR0FBTixDQUFVRixHQUFWLElBQWlCQyxLQUFLLENBQUNNLEdBQU4sQ0FBVVAsR0FBVixDQUFqQixHQUFrQ0EsR0FBekM7QUFDQTs7QUFFREUsRUFBQUEsR0FBRyxDQUFDRixHQUFELEVBQU07QUFDUixXQUFPLEtBQUtRLEtBQUwsQ0FBV04sR0FBWCxDQUFlLEtBQUtJLE1BQUwsQ0FBWU4sR0FBWixDQUFmLENBQVA7QUFDQTs7QUFFRE8sRUFBQUEsR0FBRyxDQUFDUCxHQUFELEVBQU07QUFDUixXQUFPLEtBQUtRLEtBQUwsQ0FBV0QsR0FBWCxDQUFlLEtBQUtELE1BQUwsQ0FBWU4sR0FBWixDQUFmLENBQVA7QUFDQTs7QUFFREssRUFBQUEsR0FBRyxDQUFDTCxHQUFELEVBQU1TLE1BQU4sRUFBYztBQUNoQixVQUFNO0FBQUVELE1BQUFBO0FBQUYsUUFBWSxJQUFsQjtBQUNBLFVBQU1FLEdBQUcsR0FBRyxLQUFLSixNQUFMLENBQVlOLEdBQVosQ0FBWjs7QUFDQSxRQUFJLENBQUNRLEtBQUssQ0FBQ04sR0FBTixDQUFVUSxHQUFWLENBQUwsRUFBcUI7QUFDcEJGLE1BQUFBLEtBQUssQ0FBQ0gsR0FBTixDQUFVSyxHQUFWLEVBQWVELE1BQWY7QUFDQTtBQUNEOztBQUVERSxFQUFBQSxPQUFPLENBQUNDLEVBQUQsRUFBSztBQUNYLFdBQU8sS0FBS0osS0FBTCxDQUFXRyxPQUFYLENBQW1CQyxFQUFuQixDQUFQO0FBQ0E7O0FBRURDLEVBQUFBLEtBQUssR0FBRztBQUNQLFFBQUksQ0FBQyxLQUFLQyxPQUFWLEVBQW1CO0FBQ2xCLFdBQUtBLE9BQUwsR0FBZUMsSUFBSSxDQUFDQyxHQUFMLEtBQWEsS0FBS3BCLEdBQWpDO0FBQ0E7O0FBQ0QsUUFBSSxLQUFLa0IsT0FBTCxJQUFnQkMsSUFBSSxDQUFDQyxHQUFMLEVBQXBCLEVBQWdDO0FBQy9CLFdBQUtDLEtBQUw7QUFDQTtBQUNEOztBQUVEQSxFQUFBQSxLQUFLLEdBQUc7QUFDUCxTQUFLVCxLQUFMLENBQVdTLEtBQVg7QUFDQSxTQUFLaEIsS0FBTCxDQUFXZ0IsS0FBWDtBQUNBLFNBQUtILE9BQUwsR0FBZSxJQUFmO0FBQ0E7O0FBNUQ0QiIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIFJlZ2lzdHJ5IHtcblx0Y29uc3RydWN0b3IodHRsKSB7XG5cdFx0aWYgKHR5cGVvZiB0dGwgIT09ICdudW1iZXInKSB7XG5cdFx0XHR0aHJvdyBuZXcgRXJyb3IoJ3R0bCBpcyByZXF1aXJlZCcpO1xuXHRcdH1cblx0XHR0aGlzLnR0bCA9IHR0bDtcblx0fVxuXG5cdGV4cGlyZXMgPSBudWxsO1xuXG5cdGNhY2hlID0gbmV3IE1hcCgpO1xuXG5cdGxpbmtzID0gbmV3IE1hcCgpO1xuXG5cdGhhc0xpbmsoa2V5KSB7XG5cdFx0cmV0dXJuIHRoaXMubGlua3MuaGFzKGtleSk7XG5cdH1cblxuXHRsbihhbGlhcywga2V5KSB7XG5cdFx0dGhpcy5saW5rcy5zZXQoYWxpYXMsIGtleSk7XG5cdH1cblxuXHRsb29rdXAoa2V5KSB7XG5cdFx0Y29uc3QgeyBsaW5rcyB9ID0gdGhpcztcblx0XHRyZXR1cm4gbGlua3MuaGFzKGtleSkgPyBsaW5rcy5nZXQoa2V5KSA6IGtleTtcblx0fVxuXG5cdGhhcyhrZXkpIHtcblx0XHRyZXR1cm4gdGhpcy5jYWNoZS5oYXModGhpcy5sb29rdXAoa2V5KSk7XG5cdH1cblxuXHRnZXQoa2V5KSB7XG5cdFx0cmV0dXJuIHRoaXMuY2FjaGUuZ2V0KHRoaXMubG9va3VwKGtleSkpO1xuXHR9XG5cblx0c2V0KGtleSwgbW9kdWxlKSB7XG5cdFx0Y29uc3QgeyBjYWNoZSB9ID0gdGhpcztcblx0XHRjb25zdCBwaWQgPSB0aGlzLmxvb2t1cChrZXkpO1xuXHRcdGlmICghY2FjaGUuaGFzKHBpZCkpIHtcblx0XHRcdGNhY2hlLnNldChwaWQsIG1vZHVsZSk7XG5cdFx0fVxuXHR9XG5cblx0Zm9yRWFjaChmbikge1xuXHRcdHJldHVybiB0aGlzLmNhY2hlLmZvckVhY2goZm4pO1xuXHR9XG5cblx0c3dlZXAoKSB7XG5cdFx0aWYgKCF0aGlzLmV4cGlyZXMpIHtcblx0XHRcdHRoaXMuZXhwaXJlcyA9IERhdGUubm93KCkgKyB0aGlzLnR0bDtcblx0XHR9XG5cdFx0aWYgKHRoaXMuZXhwaXJlcyA8PSBEYXRlLm5vdygpKSB7XG5cdFx0XHR0aGlzLmNsZWFyKCk7XG5cdFx0fVxuXHR9XG5cblx0Y2xlYXIoKSB7XG5cdFx0dGhpcy5jYWNoZS5jbGVhcigpO1xuXHRcdHRoaXMubGlua3MuY2xlYXIoKTtcblx0XHR0aGlzLmV4cGlyZXMgPSBudWxsO1xuXHR9XG59XG4iXX0=