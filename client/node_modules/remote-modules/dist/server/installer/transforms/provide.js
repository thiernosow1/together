"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var babylon = _interopRequireWildcard(require("@babel/parser"));

var t = _interopRequireWildcard(require("@babel/types"));

var _once = _interopRequireDefault(require("../../../lib/helpers/once"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

var _default = (api, {
  provide
}) => ({
  visitor: {
    Program: (0, _once.default)(path => {
      Object.entries(provide).forEach(([key, value]) => {
        if (typeof value === 'string') {
          path.scope.push({
            id: t.Identifier(key),
            init: babylon.parseExpression(value)
          });
        } else {
          path.unshiftContainer('body', value);
        }
      });
    })
  }
});

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9zZXJ2ZXIvaW5zdGFsbGVyL3RyYW5zZm9ybXMvcHJvdmlkZS5qcyJdLCJuYW1lcyI6WyJhcGkiLCJwcm92aWRlIiwidmlzaXRvciIsIlByb2dyYW0iLCJwYXRoIiwiT2JqZWN0IiwiZW50cmllcyIsImZvckVhY2giLCJrZXkiLCJ2YWx1ZSIsInNjb3BlIiwicHVzaCIsImlkIiwidCIsIklkZW50aWZpZXIiLCJpbml0IiwiYmFieWxvbiIsInBhcnNlRXhwcmVzc2lvbiIsInVuc2hpZnRDb250YWluZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFFQTs7Ozs7O2VBRWUsQ0FBQ0EsR0FBRCxFQUFNO0FBQUVDLEVBQUFBO0FBQUYsQ0FBTixNQUF1QjtBQUNyQ0MsRUFBQUEsT0FBTyxFQUFFO0FBQ1JDLElBQUFBLE9BQU8sRUFBRSxtQkFBS0MsSUFBSSxJQUFJO0FBQ3JCQyxNQUFBQSxNQUFNLENBQUNDLE9BQVAsQ0FBZUwsT0FBZixFQUF3Qk0sT0FBeEIsQ0FBZ0MsQ0FBQyxDQUFDQyxHQUFELEVBQU1DLEtBQU4sQ0FBRCxLQUFrQjtBQUNqRCxZQUFJLE9BQU9BLEtBQVAsS0FBaUIsUUFBckIsRUFBK0I7QUFDOUJMLFVBQUFBLElBQUksQ0FBQ00sS0FBTCxDQUFXQyxJQUFYLENBQWdCO0FBQ2ZDLFlBQUFBLEVBQUUsRUFBRUMsQ0FBQyxDQUFDQyxVQUFGLENBQWFOLEdBQWIsQ0FEVztBQUVmTyxZQUFBQSxJQUFJLEVBQUVDLE9BQU8sQ0FBQ0MsZUFBUixDQUF3QlIsS0FBeEI7QUFGUyxXQUFoQjtBQUlBLFNBTEQsTUFLTztBQUNOTCxVQUFBQSxJQUFJLENBQUNjLGdCQUFMLENBQXNCLE1BQXRCLEVBQThCVCxLQUE5QjtBQUNBO0FBQ0QsT0FURDtBQVVBLEtBWFE7QUFERDtBQUQ0QixDQUF2QixDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgYmFieWxvbiBmcm9tICdAYmFiZWwvcGFyc2VyJztcbmltcG9ydCAqIGFzIHQgZnJvbSAnQGJhYmVsL3R5cGVzJztcblxuaW1wb3J0IG9uY2UgZnJvbSAnLi4vLi4vLi4vbGliL2hlbHBlcnMvb25jZSc7XG5cbmV4cG9ydCBkZWZhdWx0IChhcGksIHsgcHJvdmlkZSB9KSA9PiAoe1xuXHR2aXNpdG9yOiB7XG5cdFx0UHJvZ3JhbTogb25jZShwYXRoID0+IHtcblx0XHRcdE9iamVjdC5lbnRyaWVzKHByb3ZpZGUpLmZvckVhY2goKFtrZXksIHZhbHVlXSkgPT4ge1xuXHRcdFx0XHRpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykge1xuXHRcdFx0XHRcdHBhdGguc2NvcGUucHVzaCh7XG5cdFx0XHRcdFx0XHRpZDogdC5JZGVudGlmaWVyKGtleSksXG5cdFx0XHRcdFx0XHRpbml0OiBiYWJ5bG9uLnBhcnNlRXhwcmVzc2lvbih2YWx1ZSlcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRwYXRoLnVuc2hpZnRDb250YWluZXIoJ2JvZHknLCB2YWx1ZSk7XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXHRcdH0pXG5cdH1cbn0pO1xuIl19