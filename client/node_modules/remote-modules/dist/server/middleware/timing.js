"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _logger = _interopRequireDefault(require("../../lib/logger"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = () => {
  const {
    NODE_ENV
  } = process.env;
  return async (ctx, next) => {
    const start = process.hrtime();

    try {
      await next();
    } catch (err) {
      ctx.status = err.status || 500;
      ctx.app.emit('error', err, ctx);

      if (NODE_ENV === 'development') {
        ctx.body = err.stack;
      }
    } finally {
      if (!ctx.state.noLog) {
        const [s, ns] = process.hrtime(start);
        const ms = s * 1e3 + ns * 1e-6;
        const time = `${ms.toFixed(3)}ms`;
        const httpVersion = `HTTP/${ctx.req.httpVersion}`;
        const size = ctx.length || 0;
        const output = `"${ctx.method} ${ctx.url} ${httpVersion}" ${ctx.status} ${size} [${time}]`;

        switch (true) {
          case ctx.status >= 400 && ctx.status < 500:
            _logger.default.warn(output);

            break;

          case ctx.status >= 500:
            _logger.default.error(output);

            break;

          default:
            _logger.default.info(output);

            break;
        }
      }
    }
  };
};

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zZXJ2ZXIvbWlkZGxld2FyZS90aW1pbmcuanMiXSwibmFtZXMiOlsiTk9ERV9FTlYiLCJwcm9jZXNzIiwiZW52IiwiY3R4IiwibmV4dCIsInN0YXJ0IiwiaHJ0aW1lIiwiZXJyIiwic3RhdHVzIiwiYXBwIiwiZW1pdCIsImJvZHkiLCJzdGFjayIsInN0YXRlIiwibm9Mb2ciLCJzIiwibnMiLCJtcyIsInRpbWUiLCJ0b0ZpeGVkIiwiaHR0cFZlcnNpb24iLCJyZXEiLCJzaXplIiwibGVuZ3RoIiwib3V0cHV0IiwibWV0aG9kIiwidXJsIiwibG9nZ2VyIiwid2FybiIsImVycm9yIiwiaW5mbyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7O2VBRWUsTUFBTTtBQUNwQixRQUFNO0FBQUVBLElBQUFBO0FBQUYsTUFBZUMsT0FBTyxDQUFDQyxHQUE3QjtBQUNBLFNBQU8sT0FBT0MsR0FBUCxFQUFZQyxJQUFaLEtBQXFCO0FBQzNCLFVBQU1DLEtBQUssR0FBR0osT0FBTyxDQUFDSyxNQUFSLEVBQWQ7O0FBQ0EsUUFBSTtBQUNILFlBQU1GLElBQUksRUFBVjtBQUNBLEtBRkQsQ0FFRSxPQUFPRyxHQUFQLEVBQVk7QUFDYkosTUFBQUEsR0FBRyxDQUFDSyxNQUFKLEdBQWFELEdBQUcsQ0FBQ0MsTUFBSixJQUFjLEdBQTNCO0FBQ0FMLE1BQUFBLEdBQUcsQ0FBQ00sR0FBSixDQUFRQyxJQUFSLENBQWEsT0FBYixFQUFzQkgsR0FBdEIsRUFBMkJKLEdBQTNCOztBQUNBLFVBQUlILFFBQVEsS0FBSyxhQUFqQixFQUFnQztBQUMvQkcsUUFBQUEsR0FBRyxDQUFDUSxJQUFKLEdBQVdKLEdBQUcsQ0FBQ0ssS0FBZjtBQUNBO0FBQ0QsS0FSRCxTQVFVO0FBQ1QsVUFBSSxDQUFDVCxHQUFHLENBQUNVLEtBQUosQ0FBVUMsS0FBZixFQUFzQjtBQUNyQixjQUFNLENBQUNDLENBQUQsRUFBSUMsRUFBSixJQUFVZixPQUFPLENBQUNLLE1BQVIsQ0FBZUQsS0FBZixDQUFoQjtBQUNBLGNBQU1ZLEVBQUUsR0FBR0YsQ0FBQyxHQUFHLEdBQUosR0FBVUMsRUFBRSxHQUFHLElBQTFCO0FBQ0EsY0FBTUUsSUFBSSxHQUFJLEdBQUVELEVBQUUsQ0FBQ0UsT0FBSCxDQUFXLENBQVgsQ0FBYyxJQUE5QjtBQUNBLGNBQU1DLFdBQVcsR0FBSSxRQUFPakIsR0FBRyxDQUFDa0IsR0FBSixDQUFRRCxXQUFZLEVBQWhEO0FBQ0EsY0FBTUUsSUFBSSxHQUFHbkIsR0FBRyxDQUFDb0IsTUFBSixJQUFjLENBQTNCO0FBQ0EsY0FBTUMsTUFBTSxHQUFJLElBQUdyQixHQUFHLENBQUNzQixNQUFPLElBQUd0QixHQUFHLENBQUN1QixHQUFJLElBQUdOLFdBQVksS0FBSWpCLEdBQUcsQ0FBQ0ssTUFBTyxJQUFHYyxJQUFLLEtBQUlKLElBQUssR0FBeEY7O0FBQ0EsZ0JBQVEsSUFBUjtBQUNDLGVBQUtmLEdBQUcsQ0FBQ0ssTUFBSixJQUFjLEdBQWQsSUFBcUJMLEdBQUcsQ0FBQ0ssTUFBSixHQUFhLEdBQXZDO0FBQ0NtQiw0QkFBT0MsSUFBUCxDQUFZSixNQUFaOztBQUNBOztBQUNELGVBQUtyQixHQUFHLENBQUNLLE1BQUosSUFBYyxHQUFuQjtBQUNDbUIsNEJBQU9FLEtBQVAsQ0FBYUwsTUFBYjs7QUFDQTs7QUFDRDtBQUNDRyw0QkFBT0csSUFBUCxDQUFZTixNQUFaOztBQUNBO0FBVEY7QUFXQTtBQUNEO0FBQ0QsR0EvQkQ7QUFnQ0EsQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBsb2dnZXIgZnJvbSAnLi4vLi4vbGliL2xvZ2dlcic7XG5cbmV4cG9ydCBkZWZhdWx0ICgpID0+IHtcblx0Y29uc3QgeyBOT0RFX0VOViB9ID0gcHJvY2Vzcy5lbnY7XG5cdHJldHVybiBhc3luYyAoY3R4LCBuZXh0KSA9PiB7XG5cdFx0Y29uc3Qgc3RhcnQgPSBwcm9jZXNzLmhydGltZSgpO1xuXHRcdHRyeSB7XG5cdFx0XHRhd2FpdCBuZXh0KCk7XG5cdFx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0XHRjdHguc3RhdHVzID0gZXJyLnN0YXR1cyB8fCA1MDA7XG5cdFx0XHRjdHguYXBwLmVtaXQoJ2Vycm9yJywgZXJyLCBjdHgpO1xuXHRcdFx0aWYgKE5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnKSB7XG5cdFx0XHRcdGN0eC5ib2R5ID0gZXJyLnN0YWNrO1xuXHRcdFx0fVxuXHRcdH0gZmluYWxseSB7XG5cdFx0XHRpZiAoIWN0eC5zdGF0ZS5ub0xvZykge1xuXHRcdFx0XHRjb25zdCBbcywgbnNdID0gcHJvY2Vzcy5ocnRpbWUoc3RhcnQpO1xuXHRcdFx0XHRjb25zdCBtcyA9IHMgKiAxZTMgKyBucyAqIDFlLTY7XG5cdFx0XHRcdGNvbnN0IHRpbWUgPSBgJHttcy50b0ZpeGVkKDMpfW1zYDtcblx0XHRcdFx0Y29uc3QgaHR0cFZlcnNpb24gPSBgSFRUUC8ke2N0eC5yZXEuaHR0cFZlcnNpb259YDtcblx0XHRcdFx0Y29uc3Qgc2l6ZSA9IGN0eC5sZW5ndGggfHwgMDtcblx0XHRcdFx0Y29uc3Qgb3V0cHV0ID0gYFwiJHtjdHgubWV0aG9kfSAke2N0eC51cmx9ICR7aHR0cFZlcnNpb259XCIgJHtjdHguc3RhdHVzfSAke3NpemV9IFske3RpbWV9XWA7XG5cdFx0XHRcdHN3aXRjaCAodHJ1ZSkge1xuXHRcdFx0XHRcdGNhc2UgY3R4LnN0YXR1cyA+PSA0MDAgJiYgY3R4LnN0YXR1cyA8IDUwMDpcblx0XHRcdFx0XHRcdGxvZ2dlci53YXJuKG91dHB1dCk7XG5cdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRjYXNlIGN0eC5zdGF0dXMgPj0gNTAwOlxuXHRcdFx0XHRcdFx0bG9nZ2VyLmVycm9yKG91dHB1dCk7XG5cdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRkZWZhdWx0OlxuXHRcdFx0XHRcdFx0bG9nZ2VyLmluZm8ob3V0cHV0KTtcblx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xufTtcbiJdfQ==